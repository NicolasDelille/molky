{"version":3,"sources":["components/PlayerSelection/PlayerSelection.module.css","components/Board/Board.module.css","components/Button/Button.module.css","components/WinnerBanner/WinnerBanner.module.css","App.module.css","components/Score/Score.module.css","components/Header/Header.module.css","components/AddPlayer/AddPlayer.module.css","components/Button/Button.js","components/Score/Score.js","components/WinnerBanner/WinnerBanner.js","components/Board/Board.js","components/Header/Header.js","components/Game/Game.js","components/AddPlayer/AddPlayer.js","components/PlayerSelection/PlayerSelection.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","selected","value","onClick","type","className","classes","Score","scoreBoard","Table","map","player","name","score","WinnerBanner","winner","onNewGame","history","useHistory","WinnerPage","push","BUTTONS","Board","onPlay","useState","setSelected","Buttons","row","index","Row","button","prevState","Action","disabled","Header","currentPlayer","Game","players","useEffect","length","setCurrentPlayer","initialScoreBoard","game","setGame","setWinner","setScoreBoard","currentValue","gameOver","undefined","updatedScoreBoard","console","log","nextPlayerIndex","findIndex","AddPlayer","addPlayer","playerName","setPlayerName","onSubmit","e","preventDefault","placeholder","onChange","target","PlayerSelection","addPlayers","setPlayers","showAddPlayer","setShowAddPlayer","localStorage","getItem","existingPlayers","JSON","parse","title","playerList","playerListItem","event","stopPropagation","updatedPlayers","setItem","stringify","handleSelectPlayer","playerListItemButton","filter","handleRemovePlayer","currentPlayers","App","handlePlayers","selectedPlayers","path","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.861dded9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PlayerSelection_title__2kFIH\",\"playerList\":\"PlayerSelection_playerList__2Zzjj\",\"playerListItem\":\"PlayerSelection_playerListItem__pk678\",\"playerListItemButton\":\"PlayerSelection_playerListItemButton__19QLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__2Vm6-\",\"Buttons\":\"Board_Buttons__29Nyt\",\"Row\":\"Board_Row__3xdzD\",\"Action\":\"Board_Action__-eJqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"selected\":\"Button_selected__1LYm5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WinnerPage\":\"WinnerBanner_WinnerPage__ZHNK6\",\"WinnerBanner\":\"WinnerBanner_WinnerBanner__1Ll-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Score_Table__3uOIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Players\":\"AddPlayer_Players__2iM-P\"};","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = ({ selected, value, onClick }) => {\n    return (\n        <button\n            onClick={onClick}\n            type='button'\n            className={\n                selected\n                    ? `${classes.Button} ${classes.selected}`\n                    : classes.Button\n            }\n        >\n            {value}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\nimport classes from './Score.module.css';\n\nconst Score = ({ scoreBoard }) => {\n\n    return (\n        <table className={classes.Table}>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Score</th>\n                </tr>\n            </thead>\n            <tbody>\n                {scoreBoard.map((player) => (\n                    // <tr key={round.id}> is better\n                    <tr key={player.name}>\n                        <td>{player.name}</td>\n                        <td>{player.score}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Score;\n","import { useHistory } from 'react-router';\nimport classes from './WinnerBanner.module.css';\n\nconst WinnerBanner = ({ winner, onNewGame }) => {\n    const history = useHistory();\n    return (\n        <div className={classes.WinnerPage}>\n            <div className={classes.WinnerBanner}>\n                <p>{winner} a gagn√©!</p>\n                <button\n                    onClick={() => {\n                        history.push('/');\n                    }}\n                >\n                    Menu Principal\n                </button>\n                <button\n                    onClick={() => {\n                        onNewGame();\n                    }}\n                >\n                    Nouvelle Partie\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default WinnerBanner;\n","import { useState } from 'react';\nimport Button from '../Button/Button';\nimport Score from '../Score/Score';\nimport WinnerBanner from '../WinnerBanner/WinnerBanner';\nimport classes from './Board.module.css';\n\nconst BUTTONS = [\n    [\n        {\n            value: 7,\n        },\n        {\n            value: 9,\n        },\n        {\n            value: 8,\n        },\n    ],\n    [\n        {\n            value: 5,\n        },\n        {\n            value: 11,\n        },\n        {\n            value: 12,\n        },\n        {\n            value: 6,\n        },\n    ],\n    [\n        {\n            value: 3,\n        },\n        {\n            value: 10,\n        },\n        {\n            value: 4,\n        },\n    ],\n    [\n        {\n            value: 1,\n        },\n        {\n            value: 2,\n        },\n    ],\n];\n\nconst Board = ({ onPlay, winner, scoreBoard, onNewGame}) => {\n    const [selected, setSelected] = useState();\n\n    const handleButtonSelect = (value) => {\n        setSelected((prevState) => (prevState === value ? null : value));\n    };\n\n    return (\n        <div className={classes.Board}>\n            <div className={classes.Buttons}>\n                {BUTTONS.map((row, index) => (\n                    <div className={classes.Row} key={index}>\n                        {row.map((button) => (\n                            <Button\n                                key={button.value}\n                                value={button.value}\n                                onClick={() => handleButtonSelect(button.value)}\n                                selected={selected === button.value}\n                            />\n                        ))}\n                    </div>\n                ))}\n                {winner && <WinnerBanner winner={winner} onNewGame={onNewGame} />}\n            </div>\n            <Score scoreBoard={scoreBoard} />\n            <div className={classes.Action}>\n                <button\n                    onClick={() => {\n                        onPlay(selected);\n                        setSelected();\n                    }}\n                    disabled\n                >\n                    Annuler\n                </button>\n                <button\n                    onClick={() => {\n                        onPlay(selected);\n                        setSelected();\n                    }}\n                    disabled={winner}\n                >\n                    Valider\n                </button>\n            </div> \n        </div>\n    );\n};\n\nexport default Board;\n","import React from 'react';\nimport classes from './Header.module.css';\n\nconst Header = ({ currentPlayer }) => {\n    return <div className={classes.Header}>{currentPlayer}</div>;\n};\n\nexport default Header;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Board from '../Board/Board';\nimport Header from '../Header/Header';\n\nconst Game = ({ players }) => {\n    const history = useHistory();\n    useEffect(() => {\n        if (players.length === 0) {\n            history.push('/');\n            return;\n        }\n        setCurrentPlayer(players[0].name);\n    }, [players, history]);\n    const initialScoreBoard = players.map((player) => ({\n        name: player.name,\n        score: 0,\n    }));\n    const [currentPlayer, setCurrentPlayer] = useState();\n    // game (rename?) contains the current player and the current selected value\n    const [game, setGame] = useState([]);\n    // winner contains the name of the winner, empty if no winner yet\n    const [winner, setWinner] = useState(null);\n    // scoreBoard contains the list of players and their score\n    const [scoreBoard, setScoreBoard] = useState(initialScoreBoard);\n\n    const handleOnPlay = (value) => {\n        let currentValue = value;\n        let gameOver = false;\n        if (value === undefined) {\n            currentValue = 0;\n        }\n\n        setGame([\n            ...game,\n            {\n                player: currentPlayer,\n                score: currentValue,\n            },\n        ]);\n\n        const updatedScoreBoard = scoreBoard.map((player) => {\n            if (currentPlayer === player.name) {\n                const updatedScore = player.score + currentValue;\n                if (updatedScore >= 50) {\n                    setWinner(currentPlayer);\n                    gameOver = true;\n                    console.log(`GameOver: ${gameOver}`);\n                }\n                return {\n                    ...player,\n                    score: player.score + currentValue,\n                };\n            }\n            return player;\n        });\n        setScoreBoard(updatedScoreBoard);\n\n        if (!gameOver) {\n            const currentPlayerIndex = players.findIndex(\n                (player) => player.name === currentPlayer\n            );\n            const nextPlayerIndex = (currentPlayerIndex + 1) % players.length;\n            setCurrentPlayer(players[nextPlayerIndex].name);\n        }\n    };\n\n    const handleOnNewGame = () => {\n        setScoreBoard(initialScoreBoard);\n        setWinner(null);\n    };\n\n    return (\n        <>\n            <Header currentPlayer={currentPlayer} />\n            <Board\n                onPlay={handleOnPlay}\n                winner={winner}\n                scoreBoard={scoreBoard}\n                onNewGame={handleOnNewGame}\n            />\n        </>\n    );\n};\n\nexport default Game;\n","import React, { useState } from 'react';\nimport classes from './AddPlayer.module.css';\n\nconst AddPlayer = ({ addPlayer }) => {\n    const [playerName, setPlayerName] = useState('');\n    const handleChange = (e) => {\n        setPlayerName(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addPlayer({\n            name: playerName,\n            selected: false,\n        });\n    };\n\n    return (\n        <div className={classes.AddPlayer}>\n            <form onSubmit={handleSubmit}>\n                <input\n                    placeholder='Nom'\n                    onChange={handleChange}\n                    value={playerName}\n                />\n                <button type='submit'>Ajouter</button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddPlayer;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AddPlayer from '../AddPlayer/AddPlayer';\nimport classes from './PlayerSelection.module.css';\n\nconst PlayerSelection = ({ addPlayers }) => {\n    const history = useHistory();\n    const [players, setPlayers] = useState([]);\n    const [showAddPlayer, setShowAddPlayer] = useState(false);\n\n    useEffect(() => {\n        if (localStorage.getItem('players')) {\n            const existingPlayers = JSON.parse(localStorage.getItem('players'));\n            setPlayers(existingPlayers);\n        }\n    }, []);\n\n    const handleAddPlayer = (player) => {\n        setPlayers((currentPlayers) => [...currentPlayers, player]);\n        localStorage.setItem('players', JSON.stringify([...players, player]));\n        setShowAddPlayer(false);\n    };\n\n    const handleRemovePlayer = (event, name) => {\n        event.stopPropagation();\n        const updatedPlayers = players.filter((player) => player.name !== name);\n        setPlayers(updatedPlayers);\n        localStorage.setItem('players', JSON.stringify(updatedPlayers));\n    };\n\n    const handleSelectPlayer = (event, name) => {\n        event.stopPropagation();\n        const updatedPlayers = players.map((player) => {\n            if (player.name === name) {\n                return {\n                    ...player,\n                    selected: !player.selected,\n                };\n            }\n            return player;\n        });\n        setPlayers(updatedPlayers);\n        localStorage.setItem('players', JSON.stringify(updatedPlayers));\n    };\n\n    return (\n        <div>\n            <h1 className={classes.title}>S√©lectionnez les joueurs</h1>\n            {players.length > 0 && (\n                <ul className={classes.playerList}>\n                    {players.map((player, index) => (\n                        <li\n                            key={index}\n                            className={`${classes.playerListItem} ${\n                                player.selected ? classes.selected : ''\n                            }`}\n                            onClick={(e) => handleSelectPlayer(e, player.name)}\n                        >\n                            {player.name}\n                            <button\n                                type='button'\n                                className={classes.playerListItemButton}\n                                onClick={(e) =>\n                                    handleRemovePlayer(e, player.name)\n                                }\n                            >\n                                x\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n            {showAddPlayer ? (\n                <AddPlayer addPlayer={handleAddPlayer} />\n            ) : (\n                <button onClick={() => setShowAddPlayer(true)}>\n                    Ajouter un joueur\n                </button>\n            )}\n            {players.length > 1 && (\n                <button\n                    onClick={() => {\n                        addPlayers(players.filter((player) => player.selected));\n                        history.push('/game');\n                    }}\n                >\n                    D√©marrer la partie\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default PlayerSelection;\n","import { useState } from 'react';\nimport classes from './App.module.css';\nimport Game from './components/Game/Game';\nimport PlayerSelection from './components/PlayerSelection/PlayerSelection';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n    const [players, setPlayers] = useState([]);\n\n    const handlePlayers = (selectedPlayers) => {\n        setPlayers(selectedPlayers);\n    };\n\n    return (\n        <div className={classes.App}>\n            <Router>\n                <Switch>\n                    <Route\n                        path='/game'\n                        render={(props) => <Game players={players} />}\n                    />\n                    <Route\n                        path='/'\n                        render={(props) => (\n                            <PlayerSelection\n                                {...props}\n                                addPlayers={handlePlayers}\n                            />\n                        )}\n                    />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}